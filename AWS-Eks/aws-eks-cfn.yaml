AWSTemplateFormatVersion: '2010-09-09'
Resources:
  EksVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '192.168.0.0/16'
      Tags:
        - Key: Name
          Value: eksvpc

  EksVpcIgw:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: eksvpc-igw

  VpcGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref EksVpc
      InternetGatewayId: !Ref EksVpcIgw

  PrivateSubnetUsEast1a:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EksVpc
      CidrBlock: '192.168.0.0/19'
      AvailabilityZone: 'us-east-1a'
      Tags:
        - Key: Name
          Value: private-us-east-1a
        - Key: kubernetes.io/role/internal-elb
          Value: '1'
        - Key: kubernetes.io/cluster/demo
          Value: owned

  PrivateSubnetUsEast1b:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EksVpc
      CidrBlock: '192.168.32.0/19'
      AvailabilityZone: 'us-east-1b'
      Tags:
        - Key: Name
          Value: private-us-east-1b
        - Key: kubernetes.io/role/internal-elb
          Value: '1'
        - Key: kubernetes.io/cluster/demo
          Value: owned

  PublicSubnetUsEast1a:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EksVpc
      CidrBlock: '192.168.64.0/19'
      AvailabilityZone: 'us-east-1a'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: public-us-east-1a
        - Key: kubernetes.io/role/elb
          Value: '1'
        - Key: kubernetes.io/cluster/demo
          Value: owned

  PublicSubnetUsEast1b:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref EksVpc
      CidrBlock: '192.168.96.0/19'
      AvailabilityZone: 'us-east-1b'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: public-us-east-1b
        - Key: kubernetes.io/role/elb
          Value: '1'
        - Key: kubernetes.io/cluster/demo
          Value: owned

  NatEip:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: 'vpc'
      Tags:
        - Key: Name
          Value: 'nat'

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatEip.AllocationId
      SubnetId: !Ref PublicSubnetUsEast1a
      Tags:
        - Key: Name
          Value: 'k8s-nat'
    DependsOn: EksVpcIgw

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref EksVpc
      Tags:
        - Key: Name
          Value: private

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref EksVpc
      Tags:
        - Key: Name
          Value: public

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref EksVpcIgw

  PrivateSubnetRouteTableAssociationUsEast1a:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetUsEast1a
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociationUsEast1b:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetUsEast1b
      RouteTableId: !Ref PrivateRouteTable

  PublicSubnetRouteTableAssociationUsEast1a:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetUsEast1a
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociationUsEast1b:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetUsEast1b
      RouteTableId: !Ref PublicRouteTable

  EksRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'eks-cluster-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: 'sts:AssumeRole'
      Tags:
        - Key: tag-key
          Value: eks-cluster

  EksClusterPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'eks-cluster-policy'
      Roles:
        - !Ref EksRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Resource: '*'

  EksCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: 'eks-cluster'
      RoleArn: !GetAtt EksRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PrivateSubnetUsEast1a
          - !Ref PrivateSubnetUsEast1b
          - !Ref PublicSubnetUsEast1a
          - !Ref PublicSubnetUsEast1b
      Version: '1.21'  # EKS versiyonu, gerekli durumda g√ºncelleyebilirsiniz.

  EksNodeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'eks-node-group-nodes'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ec2.amazonaws.com
            Action: 'sts:AssumeRole'

  EksNodePolicyWorkerNode:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'AmazonEKSWorkerNodePolicy'
      Roles: 
        - !Ref EksNodeRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
  
  EksNodePolicyCNI:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'AmazonEKS_CNI_Policy'
      Roles: 
        - !Ref EksNodeRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'

  EksNodePolicyEC2ContainerRegistryReadOnly:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'AmazonEC2ContainerRegistryReadOnly'
      Roles: 
        - !Ref EksNodeRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'

  EksNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref EksCluster
      NodeRole: !GetAtt EksNodeRole.Arn
      NodegroupName: 'private-nodes'
      Subnets: 
        - !Ref PrivateSubnetUsEast1a
        - !Ref PrivateSubnetUsEast1b
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 10
        MinSize: 0
      InstanceTypes: ["t2.medium"]
      Labels: 
        node: "eksnode02"
      CapacityType: ON_DEMAND
      UpdateConfig:
        MaxUnavailable: 1

  EksOidcProvider:
    Type: "AWS::IAM::OIDCProvider"
    Properties:
      Url: !GetAtt EksCluster.OpenIdConnectIssuerUrl
      ClientIdList:
        - "sts.amazonaws.com"
      ThumbprintList:
        - !Sub "PLACE_YOUR_CERTIFICATE_THUMBPRINT_HERE"

  EksClusterAutoscalerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "eks-cluster-autoscaler"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref EksOidcProvider
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                 "oidc.eks.${EksCluster.OpenIdConnectIssuerUrl}:sub":
                     "system:serviceaccount:kube-system:cluster-autoscaler"

  EksClusterAutoscalerPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "eks-cluster-autoscaler"
      Roles: 
        - !Ref EksClusterAutoscalerRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - "autoscaling:DescribeAutoScalingGroups"
              - "autoscaling:DescribeAutoScalingInstances"
              - "autoscaling:DescribeLaunchConfigurations"
              - "autoscaling:DescribeTags"
              - "autoscaling:SetDesiredCapacity"
              - "autoscaling:TerminateInstanceInAutoScalingGroup"
              - "ec2:DescribeLaunchTemplateVersions"
            Resource: "*"

Outputs:
  EksVpcId:
    Description: "VPC Id of the created VPC"
    Value: !Ref EksVpc

  EksClusterName:
    Description: "Name of the EKS Cluster"
    Value: !Ref EksCluster

  EksClusterRoleArn:
    Description: "ARN of the EKS Cluster IAM Role"
    Value: !GetAtt EksRole.Arn

  EksNodeRoleArn:
    Description: "ARN of the EKS Node Group IAM Role"
    Value: !GetAtt EksNodeRole.Arn

  EksOidcProviderArn:
    Description: "ARN of the EKS OIDC Provider"
    Value: !GetAtt EksOidcProvider.Arn

  EksClusterAutoscalerRoleArn:
    Description: "ARN of the EKS Cluster Autoscaler IAM Role"
    Value: !GetAtt EksClusterAutoscalerRole.Arn

   








